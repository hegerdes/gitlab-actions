# GitLab CI File
stages:
  - test
  - build
  - deploy
  - release

include:
  - local: .gitlab/ci/snippets.yml
  - local: .gitlab/ci/rules.yml
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/kaniko-build@$CI_COMMIT_SHA
    inputs:
      context: $CI_PROJECT_DIR/tests
      dockerfile: $CI_PROJECT_DIR/tests/Dockerfile
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/buildah-build@$CI_COMMIT_SHA
    inputs:
      context: $CI_PROJECT_DIR/tests
      dockerfile: $CI_PROJECT_DIR/tests/Dockerfile
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/pre-commit@$CI_COMMIT_SHA
    inputs:
      autofix: true
      access_token: $PRE_COMMIT_ACCESS_TOKEN
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/helm@$CI_COMMIT_SHA
    inputs:
      release_name: helm-ci-test
      helm_extra_args: --atomic --wait --create-namespace --namespace test --dry-run --kube-apiserver https://kubernetes:6443 --kube-token $KUBE_TOKEN --kube-insecure-skip-tls-verify
      chart_path: tests/charts/demo

# The above is all you need. But for testing the pipelines are run for amd64 and arm64.
# So we override the jobs to use a matrix build. Again not needed by default.
# Currently there is no small arm runner

snippets:
  image: debian:bookworm-slim
  tags: [$RUNNER]
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: saas-linux-medium-arm64
  script:
    - !reference [.snippets, debian-core-tools]
    - !reference [.snippets, alpine-core-tools]
    - !reference [.snippets, terraform-install]
    - !reference [.snippets, tflint-install]
    - !reference [.snippets, kubectl-install]
    - !reference [.snippets, helm-install]
    - !reference [.snippets, kubeseal-install]
    - !reference [.snippets, kind-install]
    - !reference [.snippets, minio-mc-install]
    - !reference [.snippets, yq-multi-install]
    - !reference [.snippets, azure-cli-install]
    - !reference [.snippets, aws-cli-install]
  rules:
    - !reference [.rules, default-branch-only-rules]
    - !reference [.rules, default-merge-rules]

pre-commit:
  tags: [$RUNNER]
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: saas-linux-medium-arm64

buildah-build:
  tags: [$RUNNER]
  # Multiple pushes may cause race condition. Retry twice
  retry: 2
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: saas-linux-medium-arm64

kaniko-build:
  tags: [$RUNNER]
  # Multiple pushes may cause race condition. Retry twice
  retry: 2
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: saas-linux-medium-arm64

HELM:install:
  tags: [$RUNNER]
  services:
    - name: hegerdes/kubernetes-etcd
      alias: kubernetes
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: saas-linux-medium-arm64
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# If we are tagging a release with a specific convention ("v" + number) and all
# previous checks succeeded, we proceed with creating a release automatically.
create-release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG =~ /\d+/
  script: echo "Creating release $CI_COMMIT_TAG"
  release:
    tag_name: $CI_COMMIT_TAG
    description: "Release $CI_COMMIT_TAG of components repository $CI_PROJECT_PATH"
