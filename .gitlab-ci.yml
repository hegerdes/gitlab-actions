# GitLab CI File
stages:
  - test
  - build
  - package
  - scan
  - deploy
  - release

default:
  timeout: 15min
  interruptible: true

include:
  - local: .gitlab/ci/snippets.yml
  - local: .gitlab/ci/rules.yml
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/trivy-container-scan@$CI_COMMIT_SHA
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/kaniko-build@$CI_COMMIT_SHA
    inputs:
      context: $CI_PROJECT_DIR/tests
      dockerfile: $CI_PROJECT_DIR/tests/Dockerfile
      add_image_arch_postfix: true
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/buildah-build@$CI_COMMIT_SHA
    inputs:
      context: $CI_PROJECT_DIR/tests
      dockerfile: $CI_PROJECT_DIR/tests/Dockerfile
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/container-manifest-merge@$CI_COMMIT_SHA
    inputs:
      stage: package
      image_tags:
        - $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/pre-commit@$CI_COMMIT_SHA
    inputs:
      autofix: true
      access_token: $PRE_COMMIT_ACCESS_TOKEN
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/helm-package@$CI_COMMIT_SHA
    inputs:
      chart: tests/charts/demo
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/helm-install@$CI_COMMIT_SHA
    inputs:
      release_name: nginx-ingress
      helm_extra_args: --atomic --wait --create-namespace --namespace test --dry-run --kube-apiserver https://kubernetes:6443 --kube-token $KUBE_TOKEN --kube-insecure-skip-tls-verify
      chart: tests/charts/demo
  # Alternative:
  # chart: ingress-nginx
  # repo: https://kubernetes.github.io/ingress-nginx/

# The above is all you need. But for testing the pipelines are run for amd64 and arm64.
# So we override the jobs to use a matrix build. Again not needed by default.
# Currently there is no small arm runner

variables:
  GL_K8S_CONTEXT: gitlab-ci
  GL_K8S_AGENT_ID: 1103496

snippets:
  image: $IMAGE
  tags: [$RUNNER]
  timeout: 10m
  retry: 1
  variables:
    GIT_STRATEGY: none
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
        IMAGE: ["debian:bookworm-slim", "alpine"]
      - RUNNER: hegerdes-linux-arm64
        IMAGE: ["debian:bookworm-slim", "alpine"]
  script:
    - !reference [.snippets, debian-core-tools]
    - !reference [.snippets, alpine-core-tools]
    - !reference [.snippets, openssl-install]
    - !reference [.snippets, jq-install]
    - !reference [.snippets, git-install]
    - !reference [.snippets, kubectl-install]
    - !reference [.snippets, kubeseal-install]
    - !reference [.snippets, kubeconform-install]
    - !reference [.snippets, skopeo-install]
    - !reference [.snippets, cosign-install]
    - !reference [.snippets, talosctl-install]
    - !reference [.snippets, helm-install]
    - !reference [.snippets, kind-install]
    - !reference [.snippets, minikube-install]
    - !reference [.snippets, argocd-cli-install]
    - !reference [.snippets, terraform-install]
    - !reference [.snippets, opentofu-install]
    - !reference [.snippets, tflint-install]
    - !reference [.snippets, tailscale-install]
    - !reference [.snippets, minio-mc-install]
    - !reference [.snippets, yq-by-mike-farah-install]
    - !reference [.snippets, azure-cli-install]
    - !reference [.snippets, aws-cli-install]
  rules:
    - !reference [.rules, default-branch-only-rules]
    - !reference [.rules, default-merge-rules]

pre-commit:
  tags: [$RUNNER]
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: hegerdes-linux-arm64

BUILDAH:build:
  tags: [$RUNNER]
  # Multiple pushes may cause race condition. Retry twice
  retry: 2
  variables:
    STORAGE_DRIVER: vfs
    BUILDAH_FORMAT: docker
    BUILDAH_ISOLATION: chroot
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: hegerdes-linux-arm64

KANIKO:build:
  tags: [$RUNNER]
  # Multiple pushes may cause race condition. Retry twice
  retry: 2
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: hegerdes-linux-arm64

TRIVY:container-scan:
  tags: [$RUNNER]
  allow_failure: true
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: hegerdes-linux-arm64

merge-image-manifests:
  tags: [$RUNNER]
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: hegerdes-linux-arm64

HELM:package:
  tags: [$RUNNER]
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: hegerdes-linux-arm64

HELM:install:
  tags: [$RUNNER]
  services:
    - name: hegerdes/kubernetes-etcd
      alias: kubernetes
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: hegerdes-linux-arm64
  # before_script:
  #   - !reference [.snippets, debian-core-tools]
  #   - !reference [.snippets, kubectl-install]
  #   - !reference [.snippets, kubectl-gitlab-agent]
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# If we are tagging a release with a specific convention ("v" + number) and all
# previous checks succeeded, we proceed with creating a release automatically.
create-release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script: echo "Creating release $CI_COMMIT_TAG"
  release:
    tag_name: $CI_COMMIT_TAG
    description: "Release $CI_COMMIT_TAG of components repository $CI_PROJECT_PATH"
  rules:
    - if: $CI_COMMIT_TAG =~ /\d+/
