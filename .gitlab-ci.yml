# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
  - test
  - build
  - release

include:
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/kaniko-build@$CI_COMMIT_SHA
    inputs:
      context: $CI_PROJECT_DIR/tests
      dockerfile: $CI_PROJECT_DIR/tests/Dockerfile
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/buildah-build@$CI_COMMIT_SHA
    inputs:
      context: $CI_PROJECT_DIR/tests
      dockerfile: $CI_PROJECT_DIR/tests/Dockerfile
  - component: $CI_SERVER_HOST/$CI_PROJECT_PATH/pre-commit@$CI_COMMIT_SHA
    inputs:
      autofix: true
      access_token: $PRE_COMMIT_ACCESS_TOKEN

# The above is all you need. But for testing the pipelines are run for amd64 and arm64.
# So we override the jobs to use a matrix build. Again not needed by default.

pre-commit:
  tags: [$RUNNER]
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: saas-linux-medium-arm64

buildah-build:
  tags: [$RUNNER]
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: saas-linux-medium-arm64

kaniko-build:
  tags: [$RUNNER]
  parallel:
    matrix:
      - RUNNER: saas-linux-small-amd64
      - RUNNER: saas-linux-medium-arm64

# If we are tagging a release with a specific convention ("v" + number) and all
# previous checks succeeded, we proceed with creating a release automatically.
create-release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG =~ /\d+/
  script: echo "Creating release $CI_COMMIT_TAG"
  release:
    tag_name: $CI_COMMIT_TAG
    description: "Release $CI_COMMIT_TAG of components repository $CI_PROJECT_PATH"
