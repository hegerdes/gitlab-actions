spec:
  inputs:
    as_job:
      type: string
      default: TRIVY:container-scan
    stage:
      default: scan
    image:
      default: aquasec/trivy:latest
      type: string
    severity:
      default: HIGH,CRITICAL
      type: string
    extra-args:
      default: --ignore-unfixed --exit-code 0
      type: string
    scan_target:
      default: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      type: string
    allow_fail:
      type: boolean
      default: false
    rules:
      type: array
      default:
        # Add the job to merge request pipelines if there's an open merge request.
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
        # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
        - if: $CI_OPEN_MERGE_REQUESTS
          when: never
        # Add the job to main branch pipelines.
        - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
        - if: $CI_COMMIT_TAG
---
$[[ inputs.as_job ]]:
  stage: "$[[ inputs.stage ]]"
  image:
    name: "$[[ inputs.image ]]"
    entrypoint: [""]
  allow_failure: $[[ inputs.allow_fail ]]
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Using image $[[ inputs.image ]] on ${CI_COMMIT_REF_NAME}@${CI_COMMIT_SHORT_SHA}"
    - trivy image --no-progress --severity $[[ inputs.severity ]] $[[ inputs.extra-args ]] "$[[ inputs.scan_target ]]"
  rules: $[[ inputs.rules ]]
