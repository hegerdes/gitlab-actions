spec:
  inputs:
    as_job:
      type: string
      default: COSIGN:container-sign
    stage:
      type: string
      default: package
    image:
      type: string
      default: chainguard/cosign:latest
    image_tags:
      type: array
      default:
        - "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    extra_args:
      type: string
      default: ""
    rules:
      type: array
      default:
        # Add the job to merge request pipelines if there's an open merge request.
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
        # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
        - if: $CI_OPEN_MERGE_REQUESTS
          when: never
        # Add the job to main branch pipelines.
        - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
        - if: $CI_COMMIT_TAG
---
$[[ inputs.as_job ]]:
  stage: $[[ inputs.stage ]]
  image:
    name: "$[[ inputs.image ]]"
    entrypoint: [""]
  variables:
    COSIGN_YES: "true"
    COSIGN_EXTRA_ARGS: $[[ inputs.extra_args ]]
  id_tokens:
    SIGSTORE_ID_TOKEN:
      aud: sigstore
  script:
    - cosign version
    - |
      # Signing images...
      export IMAGE_TAGS="$[[ inputs.image_tags ]]"
      IMAGE_TAGS="${IMAGE_TAGS#[}"
      IMAGE_TAGS="${IMAGE_TAGS%]}"

      if [ -z ${COSIGN_REGISTRY_USERNAME+x} ]; then
        export COSIGN_REGISTRY_USERNAME=$CI_REGISTRY_USER
      fi
      if [ -z ${COSIGN_REGISTRY_PASSWORD+x} ]; then
        export COSIGN_REGISTRY_PASSWORD=$CI_REGISTRY_PASSWORD
      fi

      # Read the cleaned-up string into an array, splitting by commas
      IFS=","
      for IMAGE_TAG in ${IMAGE_TAGS}; do
          # Ensure to strip any whitespace and send a curl request to each URL
          echo "Signing image ${IMAGE_TAG}"
          cosign sign --recursive $COSIGN_EXTRA_ARGS \
            --registry-password=$COSIGN_REGISTRY_PASSWORD \
            --registry-username=$COSIGN_REGISTRY_USERNAME \
            $IMAGE_TAG
      done
  rules: $[[ inputs.rules ]]
